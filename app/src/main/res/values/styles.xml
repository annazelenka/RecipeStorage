<resources>
     Base application theme.
    <style name="AppTheme" parent="Theme.MaterialComponents.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="colorSecondary">@color/colorAccent</item>
        <item name="android:textColorPrimary">@color/colorTextColor</item>
        <item name="android:windowContentTransitions">true</item>
        <item name="colorButtonNormal">@color/colorAccent</item>
        <item name="colorControlHighlight">@color/colorAccent</item>
        <item name="android:statusBarColor">@color/colorPrimary</item>
    </style>


    <style name="ToolbarTheme" parent="@style/ThemeOverlay.AppCompat.Dark.ActionBar">
        <!-- android:textColorPrimary is the color of the title text in the Toolbar  -->
        <item name="android:textColorPrimary">@android:color/holo_blue_light</item>
        <!-- actionMenuTextColor is the color of the text of action (menu) items  -->
        <item name="actionMenuTextColor">@android:color/holo_green_light</item>
        <!-- Tints the input fields like checkboxes and text fields -->
        <item name="colorAccent">@color/colorFacebookBlue</item>
        <!-- Applies to views in their normal state. -->
        <item name="colorControlNormal">@color/colorFacebookBlue</item>
        <!-- Applies to views in their activated state (i.e checked or switches) -->
        <item name="colorControlActivated">@color/colorFacebookBlue</item>
        <!-- Applied to framework control highlights (i.e ripples or list selectors) -->
        <item name="colorControlHighlight">@color/colorWhite</item>
        <item name="colorButtonNormal">@color/colorAccent</item>
        <item name="android:statusBarColor">@color/colorPrimary</item>


        <!-- Enable these below if you want clicking icons to trigger a ripple effect -->
        <!--
        <item name="selectableItemBackground">?android:selectableItemBackground</item>
        <item name="selectableItemBackgroundBorderless">?android:selectableItemBackground</item>
        -->
    </style>

    <!-- This configures the styles for the title within the Toolbar  -->
    <style name="Toolbar.TitleText" parent="TextAppearance.Widget.AppCompat.Toolbar.Title">
        <item name="android:textSize">21sp</item>
        <item name="android:textStyle">italic</item>
    </style>

    <style name="MyCustomTabLayout" parent="Widget.Design.TabLayout">
        <item name="tabIconTint">@color/colorWhite</item>
        <item name="tabIndicatorColor">@color/colorAccent</item>

    </style>

    <style name="AppButton" parent="Widget.MaterialComponents.Button">
        <item name="backgroundTint">@color/colorAccent</item>
    </style>

    <color name="colorWhite">#ffffff</color>
    <color name="colorBlack">#000000</color>


    <style name="customTextInputLayout" parent="@style/Widget.MaterialComponents.TextInputLayout.FilledBox">
        <item name="backgroundTint">@color/colorWhite</item>
        <item name="hintTextColor">?attr/colorAccent</item>
        <item name="android:textColorHint">@color/colorAccent</item>
        <item name="boxStrokeColor">@color/colorAccent</item>
    </style>

    <style name="customTextInputLayoutOutlined" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
<!--        <item name="backgroundTint">@color/colorWhite</item>-->
        <item name="hintTextColor">?attr/colorAccent</item>
        <item name="android:textColorHint">@color/colorAccent</item>
<!--        <item name="boxStrokeColor">@color/colorAccent</item>-->
    </style>


</resources>